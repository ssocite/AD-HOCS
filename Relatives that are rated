"/*

SARA WANTS THE FOLLOWING

PRIMARY GROUP: KSM ALUMNI 1 - 10 YEARS OUT

THEY HAVE REALTIVES THAT ARE ANY KIND OF NU ALUMNI AND THEY HAVE RATINGS 500k+ */


WITH E AS (SELECT *
FROM ENTITY),

---- Would it be possible to get a list of Kellogg alumni that are 1-10 years out?

D AS (SELECT DE.ID_NUMBER,
             DE.REPORT_NAME,
             DE.RECORD_STATUS_CODE,
             DE.DEGREES_VERBOSE,
             DE.DEGREES_CONCAT,
             DE.FIRST_KSM_YEAR,
             DE.FIRST_MASTERS_YEAR,
             DE.LAST_MASTERS_YEAR,
             DE.LAST_NONCERT_YEAR,
             DE.STEWARDSHIP_YEARS,
             DE.PROGRAM,
             DE.PROGRAM_GROUP,
             DE.PROGRAM_GROUP_RANK,
             DE.CLASS_SECTION,
             DE.MAJORS_CONCAT
FROM rpt_pbh634.v_entity_ksm_degrees DE
WHERE DE.FIRST_KSM_YEAR in ('2013','2014','2015','2016','2017','2018','2019','2020','2021','2022','2023')),

---- that are related to Kellogg/NU alumni

--- PULLING KELLOGG/NU ALUMNI (THESE WILL BE THE RELATIVES)
D2 AS (SELECT distinct e.id_number
FROM E
INNER JOIN degrees on degrees.id_number = e.id_number
where degrees.institution_code = '31173'),

--- USE THIS AS MY BASE EVAL RATINGS

TP AS (SELECT TP.ID_NUMBER,
       TP.EVALUATION_RATING,
       TP.OFFICER_RATING
From nu_prs_trp_prospect TP),

--- THAT have a research rating or UOR rating of $500K and above? (THE RELATIVES)

a as (select
       TP.ID_NUMBER,
       e.first_name,
       e.last_name,
       e.institutional_suffix,
       e.record_type_code,
       e.record_status_code,
       TP.EVALUATION_RATING,
       TP.OFFICER_RATING
From TP
inner join ENTITY e on e.id_number = TP.id_number
where tp.EVALUATION_RATING IN ('A1 $100M+','A2 $50M - 99.9M','A3 $25M - $49.9M','A4 $10M - $24.9M',
'A5 $5M - $9.9M','A6 $2M - $4.9M','A7 $1M - $1.9M','B  $500K - $999K')
Or
tp.OFFICER_RATING IN ('A1 $100M+','A2 $50M - 99.9M','A3 $25M - $49.9M','A4 $10M - $24.9M',
'A5 $5M - $9.9M','A6 $2M - $4.9M','A7 $1M - $1.9M','B  $500K - $999K')),


--- THIS WILL BE MY SUBQUERY FOR NU ALUMNI RELATIVES

NU2 AS (SELECT distinct E.ID_NUMBER,
E.RECORD_TYPE_CODE,
E.REPORT_NAME,
E.INSTITUTIONAL_SUFFIX,
a.EVALUATION_RATING,
a.OFFICER_RATING
FROM E
INNER JOIN D2 ON D2.ID_NUMBER = E.ID_NUMBER
INNER JOIN A ON A.ID_NUMBER = E.ID_NUMBER),

employ As (
  Select id_number
  , employment.employer_id_number
  , employment.job_status_code
  , employment.primary_emp_ind
  , employment.fld_of_work_code
  , job_title
  , Case
      When trim(employer_id_number) Is Not Null And employer_id_number != ' ' Then (
        Select pref_mail_name
        From entity
        Where id_number = employer_id_number)
      Else trim(employer_name1 || ' ' || employer_name2)
    End As employer_name
  , employment.stop_dt
  , employment.date_modified
  From employment
Where employment.primary_emp_ind = 'Y'
and employment.job_status_code = 'C'),

KSM_Give AS (Select give.ID_NUMBER,
give.NGC_LIFETIME,
give.LAST_GIFT_DATE
from rpt_pbh634.v_ksm_giving_summary give),

KSM_Spec AS (Select spec.ID_NUMBER,
       spec.SPECIAL_HANDLING_CONCAT,
       spec.GAB,
       spec.TRUSTEE,
       spec.EBFA,
       spec.NO_CONTACT,
       spec.NO_PHONE_IND,
       spec.NO_EMAIL_IND,
       spec.NO_MAIL_IND
From rpt_pbh634.v_entity_special_handling spec),

assignment as (select assign.id_number,
       assign.prospect_manager,
       assign.lgos,
       assign.managers,
       assign.curr_ksm_manager
from rpt_pbh634.v_assignment_summary assign),

--- Pulling primary folks, their information, relatives and their information too

r as (select distinct relationship.id_number,
       e.first_name,
       e.last_name,
       e.institutional_suffix,
       e.record_type_code,
       tp.EVALUATION_RATING,
       tp.OFFICER_RATING,
       house.FIRST_KSM_YEAR,
       house.PROGRAM,
       house.PROGRAM_GROUP,
       house.HOUSEHOLD_GEO_PRIMARY_DESC,
       house.HOUSEHOLD_CITY,
       house.HOUSEHOLD_STATE,
       house.HOUSEHOLD_COUNTRY,
       employ.job_title,
       employ.employer_name,
       KSM_Give.NGC_LIFETIME,
       KSM_Give.LAST_GIFT_DATE,
       s.GAB,
       s.TRUSTEE,
       s.EBFA,
       s.NO_CONTACT,
       s.NO_PHONE_IND,
       s.NO_EMAIL_IND,
       s.NO_MAIL_IND,
       relationship.relation_id_number as relation_id_number,
       relationship.
       TMS_RELATIONSHIPS.short_desc as relative_relationship_type,
       NU2.report_name as relative_name,
       NU2.institutional_suffix as relative_ins_suffix,
       NU2.record_type_code as relative_record_type,
       NU2.EVALUATION_RATING as relative_evaluation_rating,
       NU2.OFFICER_RATING as relative_officer_rating,
       assignment2.lgos as relative_lgo,
       assignment2.prospect_manager as relative_prospect_manager
from relationship
--- WE JUST WANT THE KSM ALUMNI, 1-10 YEARS OUT SO USE MY SUBQUERY D
inner join d on d.id_number = relationship.id_number
inner join e on e.id_number = relationship.id_number
left Join tp on tp.id_number = relationship.id_number
left join assignment on assignment.id_number = relationship.id_number
left join employ on employ.id_number = relationship.id_number
left Join KSM_Give on KSM_Give.id_number = relationship.id_number
left join rpt_pbh634.v_entity_ksm_households house on house.id_number = relationship.id_number
left join KSM_spec s on s.id_number = relationship.id_number
--- Bringing in the relatives to the report
--- JOIN BY RELATION ID NUMBER FOR THE REALTIVES
Inner join NU2 on NU2.id_number = relationship.relation_id_number
left join assignment assignment2 on assignment2.id_number = relationship.relation_id_number
left join TMS_RELATIONSHIPS on TMS_RELATIONSHIPS.relation_type_code = relationship.relation_type_code
where s.NO_CONTACT is null
and  (TMS_RELATIONSHIPS.short_desc != 'Mentee'
       and TMS_RELATIONSHIPS.short_desc != 'Mentor'
       and TMS_RELATIONSHIPS.short_desc != 'Friend/Acquaintance')),

--- LISTAGG THE RELATIVES TO MAKE THE EXCEL FILE EASIER TO READ:

--- LISTAGG ORDER BY RELATION ID NUMBER

listagg_r as (select distinct r.id_number,
Listagg (r.relation_id_number, ';  ') Within Group (Order By r.relation_id_number)as relative_id_number,
Listagg (r.relative_relationship_type, ';  ') Within Group (Order By r.relation_id_number)as relative_relationship_type,
Listagg (r.relative_record_type, ';  ') Within Group (Order By r.relation_id_number)as relative_record_type,
Listagg (r.relative_name, ';  ') Within Group (Order By r.relation_id_number)as relative_name,
Listagg (r.relative_ins_suffix, ';  ') Within Group (Order By r.relation_id_number)as relative_insitutional_suffix,
Listagg (r.relative_officer_rating, ';  ') Within Group (Order By r.relation_id_number)as relative_officer_rating,
Listagg (r.relative_evaluation_rating, ';  ') Within Group (Order By r.relation_id_number)as relative_evaluation_rating
from r
group by r.id_number
)

--- MY FINAL SUBQUERY

select distinct r.id_number,
       r.first_name,
       r.last_name,
       r.institutional_suffix,
       r.record_type_code,
       r.EVALUATION_RATING,
       r.OFFICER_RATING,
       r.FIRST_KSM_YEAR,
       r.PROGRAM,
       r.PROGRAM_GROUP,
       r.HOUSEHOLD_GEO_PRIMARY_DESC,
       r.HOUSEHOLD_CITY,
       r.HOUSEHOLD_STATE,
       r.HOUSEHOLD_COUNTRY,
       r.job_title,
       r.employer_name,
       r.NGC_LIFETIME,
       r.LAST_GIFT_DATE,
       r.GAB,
       r.TRUSTEE,
       r.EBFA,
       r.NO_CONTACT,
       r.NO_PHONE_IND,
       r.NO_EMAIL_IND,
       r.NO_MAIL_IND,
       lr.relative_id_number,
       lr.relative_relationship_type,
       lr.relative_name,
       lr.relative_insitutional_suffix,
       lr.relative_record_type,
       lr.relative_EVALUATION_RATING,
       lr.relative_OFFICER_RATING
       from r
       left join listagg_r lr on lr.id_number = r.id_number
       Order by r.last_name asc"
