/* Ad Hoc for Christine - KSM Alumni FT class of 2000 that opted out via imodules 

1. Used list from Liam and vlooked up to find FT class of 2000 opt outs
2. Used Amy's Code Below for noraml AF data points
3. Modfied Final Select Subquery to just the household view (removed Reunion view she provided)
3. Created KSM Emails and KSM Spec Sub Queries 
4. Left Joined KSM email subquery- provided pref_ind, email_address,email_type
5. Inner Join KSM spec with No Contact being Null. 
6. Removed original email data to relevent email data for this project 
7. Add Email and No Email_Ind to Qeury 
8. Review with Paul what can/needs to be shared */

WITH 
FINAL_SELECT AS(
SELECT DISTINCT
    KHH.ID_NUMBER
   ,KHH.SPOUSE_ID_NUMBER AS SPOUSE_ID
   ,KHH."HOUSEHOLD_ID"
   ,KHH."HOUSEHOLD_PRIMARY"
FROM rpt_pbh634.v_entity_ksm_households KHH  -- SERGIO, instead of using this view, you can use just use KHH below or Entity and use the where clause
 --to select only the IDs of those people you've identified  
 ),

KSM_Email AS (select email.id_number,
       email.preferred_ind,
       email.email_type_code,
       email.email_address,
       tms_email_type.short_desc
From email
left join tms_email_type on tms_email_type.email_type_code = email.email_type_code
Where email.preferred_ind = 'Y'),

KSM_Spec AS (Select spec.ID_NUMBER,
       spec.NO_EMAIL_IND,
       spec.NO_CONTACT
From rpt_pbh634.v_entity_special_handling spec),

NO_EMAIL_SOL AS
 (
   SELECT MAILING_LIST.ID_NUMBER
     FROM MAILING_LIST,
          FINAL_SELECT
    WHERE MAIL_LIST_CODE IN ('AC',  'AS',
                             'NAC', 
                             'NAF', 'EC',
                             'ES',  'NSC')
      AND MAIL_LIST_CTRL_CODE = 'EXC'
      AND MAIL_LIST_STATUS_CODE = 'A'
      AND (TRIM(UNIT_CODE) IS NULL OR
           UNIT_CODE = 'KM')
      AND FINAL_SELECT.ID_NUMBER  = MAILING_LIST.ID_NUMBER
   UNION
   SELECT HANDLING.ID_NUMBER
     FROM HANDLING,
          FINAL_SELECT
    WHERE FINAL_SELECT.ID_NUMBER = HANDLING.ID_NUMBER
      AND HND_STATUS_CODE = 'A'
      AND HND_TYPE_CODE IN ('DNS', 'NE', 'NES')
),
    
  NO_EMAIL_SOL2 AS
  (
  SELECT *
    FROM NO_EMAIL_SOL
    ),

AMOUNTS AS
(
SELECT 
  BS.ID_NUMBER
  ,WT0_GIFTS2.GIFTS(BS.ID_NUMBER, 4, 1+2+4+16+8192+256, '1900', '2100', '^', '^', 'KM') AMT1
 FROM FINAL_SELECT BS
),

PROPOSALS AS
(
SELECT
  EN.ID_NUMBER
  ,WT0_PKG.GetProposal2(EN.ID_NUMBER,NULL) PROPOSAL_STATUS
FROM FINAL_SELECT EN
)

,COUNT_CLASSYEAR AS (

  SELECT
    COUNT(ID_NUMBER) AS COUNT_YEARS
    ,ID_NUMBER
  FROM FINAL_SELECT
  GROUP BY ID_NUMBER
)

,KSM_MONEY AS (
SELECT DISTINCT
    GIFT_DONOR_ID
    ,SUM (CASE WHEN GIFT_YEAR_OF_GIVING = '2021' AND ALLOC_SCHOOL = 'KM' THEN GIFT_ASSOCIATED_CREDIT_AMT/COUNT_YEARS ELSE 0 END) KSM_$_2021
    ,COUNT(DISTINCT CASE WHEN GIFT_YEAR_OF_GIVING = '2021' AND ALLOC_SCHOOL = 'KM' THEN GIFT_RECEIPT_NUMBER END) KSM_#_2021
    ,SUM (CASE WHEN GIFT_YEAR_OF_GIVING = '2020' AND ALLOC_SCHOOL = 'KM' THEN GIFT_ASSOCIATED_CREDIT_AMT/COUNT_YEARS ELSE 0 END) KSM_$_2020
    ,COUNT(DISTINCT CASE WHEN GIFT_YEAR_OF_GIVING = '2020' AND ALLOC_SCHOOL = 'KM' THEN GIFT_RECEIPT_NUMBER END) KSM_#_2020
    ,SUM (CASE WHEN GIFT_YEAR_OF_GIVING = '2019' AND ALLOC_SCHOOL = 'KM' THEN GIFT_ASSOCIATED_CREDIT_AMT/COUNT_YEARS ELSE 0 END) KSM_$_2019
    ,COUNT(DISTINCT CASE WHEN GIFT_YEAR_OF_GIVING = '2019' AND ALLOC_SCHOOL = 'KM' THEN GIFT_RECEIPT_NUMBER END) KSM_#_2019
    ,SUM (CASE WHEN GIFT_YEAR_OF_GIVING = '2018' AND ALLOC_SCHOOL = 'KM' THEN GIFT_ASSOCIATED_CREDIT_AMT/COUNT_YEARS ELSE 0 END) KSM_$_2018
    ,COUNT(DISTINCT CASE WHEN GIFT_YEAR_OF_GIVING = '2018' AND ALLOC_SCHOOL = 'KM' THEN GIFT_RECEIPT_NUMBER END) KSM_#_2018
    ,SUM (CASE WHEN GIFT_YEAR_OF_GIVING = '2017' AND ALLOC_SCHOOL = 'KM' THEN GIFT_ASSOCIATED_CREDIT_AMT/COUNT_YEARS ELSE 0 END) KSM_$_2017
    ,COUNT(DISTINCT CASE WHEN GIFT_YEAR_OF_GIVING = '2017' AND ALLOC_SCHOOL = 'KM' THEN GIFT_RECEIPT_NUMBER END) KSM_#_2017
    ,SUM (CASE WHEN GIFT_YEAR_OF_GIVING = '2016' AND ALLOC_SCHOOL = 'KM' THEN GIFT_ASSOCIATED_CREDIT_AMT/COUNT_YEARS ELSE 0 END) KSM_$_2016
    ,COUNT(DISTINCT CASE WHEN GIFT_YEAR_OF_GIVING = '2016' AND ALLOC_SCHOOL = 'KM' THEN GIFT_RECEIPT_NUMBER END) KSM_#_2016
    ,SUM(GIFT_ASSOCIATED_CREDIT_AMT/COUNT_YEARS) NU_$
    ,SUM(CASE WHEN GIFT_ASSOCIATED_ALLOCATION = '3303000891301GFT' THEN GIFT_ASSOCIATED_CREDIT_AMT/COUNT_YEARS ELSE 0 END) KSM_AF_$
    ,SUM(CASE WHEN ALLOC_SCHOOL = 'KM' THEN GIFT_ASSOCIATED_CREDIT_AMT/COUNT_YEARS ELSE 0 END) KSM_$
    
FROM GIFT
     ,ALLOCATION
     ,FINAL_SELECT
     ,COUNT_CLASSYEAR
WHERE GIFT_DONOR_ID = FINAL_SELECT.ID_NUMBER
   AND GIFT_ASSOCIATED_ALLOCATION = ALLOCATION_CODE
   AND GIFT_DONOR_ID = COUNT_CLASSYEAR.ID_NUMBER
GROUP BY GIFT_DONOR_ID
),

KSM_MATCHES AS
(
SELECT 
   GIFT_DONOR_ID
   ,SUM(CASE WHEN MATCHYEAR = '2021' AND SCHAREA = 'KM' THEN MATCHAMOUNT ELSE 0 END) KSM_MATCH_2021
   ,SUM(CASE WHEN MATCHYEAR = '2020' AND SCHAREA = 'KM' THEN MATCHAMOUNT ELSE 0 END) KSM_MATCH_2020
   ,SUM(CASE WHEN MATCHYEAR = '2019' AND SCHAREA = 'KM' THEN MATCHAMOUNT ELSE 0 END) KSM_MATCH_2019
   ,SUM(CASE WHEN MATCHYEAR = '2018' AND SCHAREA = 'KM' THEN MATCHAMOUNT ELSE 0 END) KSM_MATCH_2018
   ,SUM(CASE WHEN MATCHYEAR = '2017' AND SCHAREA = 'KM' THEN MATCHAMOUNT ELSE 0 END) KSM_MATCH_2017
   ,SUM(CASE WHEN MATCHYEAR = '2016' AND SCHAREA = 'KM' THEN MATCHAMOUNT ELSE 0 END) KSM_MATCH_2016
FROM WT0_SOFT_MATCHES
   ,FINAL_SELECT
WHERE GIFT_DONOR_ID = FINAL_SELECT.ID_NUMBER
GROUP BY GIFT_DONOR_ID
),

GIVING_TRANS AS
( 
SELECT HH.* 
  FROM RPT_PBH634.V_KSM_GIVING_TRANS_HH HH
),


KLC_YN AS 
(
select ID,
        SUM(case when FY =  '2021' then AMT else 0 end) tot_kgifts_FY21,   
        SUM(case when FY =  '2022' then AMT else 0 end) tot_kgifts_FY22
  FROM (
SELECT 
   HH.ID_NUMBER ID
   ,HH.TX_NUMBER RCPT
   ,HH.FISCAL_YEAR FY
   ,(HH.CREDIT_AMOUNT + nvl(mtch.mtch,0) + nvl(clm.claim,0)) AMT
FROM GIVING_TRANS HH,
  (SELECT
    HH."ID_NUMBER"
   ,HH."MATCHED_TX_NUMBER" RCPT
   ,HH.ALLOCATION_CODE ALLOC
   ,SUM(HH."CREDIT_AMOUNT") MTCH
    FROM GIVING_TRANS HH
     WHERE HH.TX_GYPM_IND = 'M'
    GROUP BY HH."ID_NUMBER", HH."MATCHED_TX_NUMBER", HH.ALLOCATION_CODE)mtch,
   (SELECT
      HH.ID_NUMBER 
      ,HH."TX_NUMBER" RCPT
      ,HH.ALLOCATION_CODE ALLOC
      ,SUM(MC.CLAIM_AMOUNT) CLAIM
      FROM GIVING_TRANS HH
      LEFT JOIN MATCHING_CLAIM MC
        ON HH.TX_NUMBER = MC.CLAIM_GIFT_RECEIPT_NUMBER
        AND HH.ALLOCATION_CODE = MC.ALLOCATION_CODE
        --AND HH.TX_SEQUENCE = MC.CLAIM_GIFT_SEQUENCE
     -- WHERE HH."TX_NUMBER" = MC.CLAIM_GIFT_RECEIPT_NUMBER
      GROUP BY HH.ID_NUMBER, HH.TX_NUMBER, HH.ALLOCATION_CODE)CLM
     WHERE HH."FISCAL_YEAR" IN ('2021', '2022')
     AND HH."ID_NUMBER" = MTCH.ID_NUMBER (+)
     AND HH."TX_NUMBER" = MTCH.RCPT (+)
     AND HH.ALLOCATION_CODE = MTCH.ALLOC (+)
     AND HH."ID_NUMBER" = CLM.ID_NUMBER (+)
     AND HH."TX_NUMBER" = CLM.RCPT (+)
     AND HH."ALLOCATION_CODE" = CLM.ALLOC (+)
     AND HH."TX_GYPM_IND" NOT IN ('P','M')
     AND (HH.AF_FLAG = 'Y' OR HH.CRU_FLAG = 'Y'))
     GROUP BY ID
   )

,TRUSTEE AS (
  SELECT
    ID_NUMBER
    ,SPOUSE_ID_NUMBER
  FROM TABLE(RPT_PBH634.KSM_PKG.tbl_committee_trustee) T  
),

GAB_MEMBER AS (
  SELECT
    ID_NUMBER
    ,SPOUSE_ID_NUMBER
  FROM TABLE(RPT_PBH634.KSM_PKG.tbl_committee_gab) G
),

KAC AS (
   SELECT
    ID_NUMBER
    ,SPOUSE_ID_NUMBER
  FROM TABLE(RPT_PBH634.KSM_PKG.tbl_committee_kac) K
),

PHS AS (
   SELECT
     ID_NUMBER
    ,SPOUSE_ID_NUMBER
   FROM TABLE(RPT_PBH634.KSM_PKG.tbl_committee_phs) P
),
  

MYDATA AS (
         SELECT
           ID_NUMBER
           ,CREDIT_AMOUNT amt
           ,TX_GYPM_IND
           ,DATE_OF_RECORD dt
           ,TX_NUMBER rcpt
           ,MATCHED_TX_NUMBER m_rcpt
           ,ALLOC_SHORT_NAME acct
           ,AF_FLAG AF
           ,FISCAL_YEAR FY
          FROM GIVING_TRANS
          WHERE TX_GYPM_IND <> 'P'          
),

ROWDATA AS(
SELECT
           g.ID_NUMBER
           ,ROW_NUMBER() OVER(PARTITION BY g.ID_NUMBER ORDER BY g.dt DESC)RW
           ,g.amt
           ,m.amt match
           ,c.claim
           ,g.dt
           ,g.rcpt
           ,g.acct
           ,g.AF
           ,g.FY
           -- Optimize
           FROM (SELECT * FROM MYDATA WHERE TX_GYPM_IND <> 'M') g
           LEFT JOIN (SELECT * FROM MYDATA WHERE TX_GYPM_IND = 'M') m 
                ON g.rcpt = m.m_rcpt AND g.ID_NUMBER = m.ID_NUMBER
           LEFT JOIN (SELECT 
                KSMT.TX_NUMBER
                ,KSMT.ALLOCATION_CODE
                ,SUM(MC.CLAIM_AMOUNT) CLAIM
            FROM GIVING_TRANS KSMT
            INNER JOIN MATCHING_CLAIM MC
              ON KSMT."TX_NUMBER" = MC.CLAIM_GIFT_RECEIPT_NUMBER
              AND KSMT."TX_SEQUENCE" = MC.CLAIM_GIFT_SEQUENCE
              GROUP BY KSMT.TX_NUMBER, KSMT.ALLOCATION_CODE) C
              ON G.RCPT = C.TX_NUMBER
),
GIFTINFO AS (
    SELECT
     ID_NUMBER
     ,max(decode(RW,1,dt))       gdt1
     ,max(decode(RW,1,amt))     gamt1
     ,max(decode(RW,1,match))   match1
     ,max(decode(RW,2,dt)) gdt2
     ,max(decode(RW,2,amt))     gamt2
     ,max(decode(RW,2,match))   match2
     ,max(decode(RW,3,dt)) gdt3
     ,max(decode(RW,3,amt))     gamt3
     ,max(decode(RW,3,match))   match3
     ,max(decode(RW,4,dt)) gdt4
     ,max(decode(RW,4,amt))     gamt4
     ,max(decode(RW,4,match))   match4
    FROM ROWDATA
    GROUP BY ID_NUMBER
),
PLG AS 
(SELECT
   GT.ID_NUMBER
  ,count(distinct case when GT.TX_GYPM_IND = 'P' 
         AND GT.PLEDGE_STATUS <> 'R'
         THEN GT.TX_NUMBER END) KSM_PLEDGES
  ,SUM(CASE WHEN GT.TX_GYPM_IND = 'P'
         AND GT.PLEDGE_STATUS <> 'R'
         THEN GT.CREDIT_AMOUNT END) KSM_PLG_TOT
   FROM GIVING_TRANS GT
GROUP BY GT.ID_NUMBER
),
PLEDGE_ROWS AS
 (select ID,
                 max(decode(rw,1,dt)) last_plg_dt,
                 max(decode(rw,1,stat)) status1,
                 max(decode(rw,1,acct)) pacct1, 
                 max(decode(rw,1,amt)) pamt1,
                 max(decode(rw,1,bal)) bal1                
          FROM
             (SELECT
                 ID
                 ,ROW_NUMBER() OVER(PARTITION BY ID ORDER BY DT DESC)RW
                 ,DT
                 ,STAT
                 ,ACCT
                 ,AMT                                             
                 ,case when (bal * prop) < 0 then 0
                          else round(bal * prop,2) end bal
                FROM 

       (SELECT
                      HH.ID_NUMBER ID
                      ,HH.TX_NUMBER AS PLG
                      ,HH.TRANSACTION_TYPE
                      ,HH.TX_GYPM_IND
                      ,HH.ALLOC_SHORT_NAME AS ACCT
                      ,PS.SHORT_DESC AS STAT
                      ,HH.DATE_OF_RECORD AS DT
                      ,HH.CREDIT_AMOUNT
                      ,PP.PRIM_PLEDGE_AMOUNT AS AMT
                      ,PP.PRIM_PLEDGE_ORIGINAL_AMOUNT
                      ,PP.PRIM_PLEDGE_AMOUNT_PAID
                      ,p.pledge_associated_credit_amt
                      ,pp.prim_pledge_amount
                      ,CASE WHEN p.pledge_associated_credit_amt > pp.prim_pledge_amount THEN 1
                         ELSE p.pledge_associated_credit_amt / pp.prim_pledge_amount END PROP
                      ,PP.PRIM_PLEDGE_AMOUNT - pp.prim_pledge_amount_paid as BAL        
                   FROM GIVING_TRANS HH
                   LEFT JOIN TMS_PLEDGE_STATUS PS
                   ON HH."PLEDGE_STATUS" = PS.pledge_status_code
                   INNER JOIN PLEDGE P
                   ON HH."ID_NUMBER" = P.PLEDGE_DONOR_ID
                       AND HH."TX_NUMBER" = P.PLEDGE_PLEDGE_NUMBER
                   LEFT JOIN PRIMARY_PLEDGE PP
                   ON P.PLEDGE_PLEDGE_NUMBER = PP.PRIM_PLEDGE_NUMBER
                   WHERE pp.prim_pledge_amount > 0
                   ))
             GROUP BY ID
)

SELECT DISTINCT
  E.ID_NUMBER
  ,CASE WHEN E.JNT_MAILINGS_IND <> 'Y' THEN ' '
    WHEN NOT (E.MARITAL_STATUS_CODE IN ('M', 'P')) THEN ' ' ELSE EN.SPOUSE_ID END AS SPOUSE_ID_NUMBER
  ,EN."HOUSEHOLD_ID"
  ,EN."HOUSEHOLD_PRIMARY"
  ,E.REPORT_NAME
  ,AFM."DESCRIPTION" AS "AF 10K MODEL TIER"
  ,E.FIRST_NAME AS FIRST_NAME1
  ,E.LAST_NAME AS LAST_NAME1
  ,CASE WHEN E.JNT_MAILINGS_IND <> 'Y' THEN ' '
     WHEN NOT (E.MARITAL_STATUS_CODE IN ('M', 'P')) THEN ' ' ELSE SP.FIRST_NAME END AS FIRST_NAME2
  ,CASE WHEN E.JNT_MAILINGS_IND <> 'Y' THEN ' '
     WHEN NOT (E.MARITAL_STATUS_CODE IN ('M', 'P')) THEN ' ' ELSE SP.LAST_NAME END AS LAST_NAME2
  ,WT0_PKG.GetRestrictions(E.ID_NUMBER) OTHER_RESTR1
  ,WT0_PKG.GetOptOutLists(E.ID_NUMBER) OPT_OUT1
  ,WT0_PKG.GetRestrictions(EN.SPOUSE_ID) OTHER_RESTR2
  ,WT0_PKG.GetOptOutLists(EN.SPOUSE_ID) OPT_OUT2
 ,CASE WHEN WT0_PKG.GetGAB(E.ID_NUMBER) = 'TRUE' THEN 'GAB'
     WHEN WT0_PKG.GetGAB(E.SPOUSE_ID_NUMBER) = 'TRUE' THEN 'Spouse GAB' ELSE ' ' END GAB
  ,CASE WHEN WT0_PKG.GetKAC(E.ID_NUMBER) = 'TRUE' THEN 'KAC'
     WHEN WT0_PKG.GetKAC(E.SPOUSE_ID_NUMBER) = 'TRUE' THEN 'Spouse KAC' ELSE ' ' END KAC
  ,CASE WHEN WT0_PKG.GetPeteHenderson(E.ID_NUMBER) = 'Y' THEN 'PHS'
     WHEN WT0_PKG.GetPeteHenderson(E.SPOUSE_ID_NUMBER) = 'Y' THEN 'Spouse PHS' ELSE ' ' END PHS
  ,CASE WHEN WT0_PKG.IsCurrentTrustee(E.ID_NUMBER) = 'TRUE' THEN 'Trustee'
     WHEN WT0_PKG.IsCurrentTrustee(E.SPOUSE_ID_NUMBER) = 'TRUE' THEN 'Spouse Trustee' ELSE ' ' END TRUSTEE
  ,CASE WHEN TO_NUMBER(NVL(TRIM(D."FIRST_KSM_YEAR"),'0'))< 2016 AND NVL(KLCYN.tot_kgifts_fy21,0) > = 2500 
        OR NVL(KLCYN.tot_kgifts_fy22,0) >= 2500 THEN 'Y'
        WHEN TO_NUMBER(NVL(TRIM(D."FIRST_KSM_YEAR"),'0'))>= 2016 AND NVL(KLCYN.tot_kgifts_fy21,0)>= 1000
         OR TO_NUMBER(NVL(TRIM(D."FIRST_KSM_YEAR"),'0')) >= 2017 AND NVL(KLCYN.tot_kgifts_fy22,0)>= 1000 THEN 'Y' ELSE ' ' END AS "KLC"
 ,CASE WHEN SUBSTR(WT0_PKG.GetFacultyStaff(E.ID_NUMBER,'KM'), 1, 6) = 'Former' THEN ' '
     ELSE WT0_PKG.GetFacultyStaff(E.ID_NUMBER,'KM') END FACULTY_1
  ,CASE WHEN SUBSTR(WT0_PKG.GetFacultyStaff(E.SPOUSE_ID_NUMBER,'KM'), 1, 6) = 'Former' THEN ' '
     ELSE WT0_PKG.GetFacultyStaff(EN.SPOUSE_ID,'KM') END FACULTY_2
  ,E.PREF_MAIL_NAME AS PREF_MAIL_NAME1
  ,SP.PREF_MAIL_NAME AS PREF_MAIL_NAME2
  ,SALUTATION_LAST(E.ID_NUMBER,
                       DECODE(TRIM(E.PREF_MAIL_NAME),
                              NULL, ' ',
                              EN.SPOUSE_ID)) SALUTATION
  ,WT0_PKG.GetSalutationFirst(E.ID_NUMBER,
                                  DECODE(TRIM(E.PREF_MAIL_NAME),
                                         NULL, ' ',
                                           EN.SPOUSE_ID), 'KM') FIRST_NAME_DEANS
  ,SALUTATION_FIRST(E.ID_NUMBER,
                        DECODE(TRIM(E.PREF_MAIL_NAME),
                               NULL, ' ',
                               EN.SPOUSE_ID)) FIRST_NAME_SAL
  ,WT0_PKG.GetDeansSal(E.ID_NUMBER, 'KM') DEANS_SAL_1
  ,WT0_PKG.GetDeansSal(EN.SPOUSE_ID, 'KM') DEANS_SAL_2
  ,A.ADDR_TYPE_CODE
  ,A.CARE_OF
  ,A.COMPANY_NAME_1
  ,A.COMPANY_NAME_2
  ,A.BUSINESS_TITLE
  ,A.STREET1
  ,A.STREET2
  ,A.STREET3
  ,DECODE(RTRIM(A.FOREIGN_CITYZIP),
              NULL, A.CITY,
              A.FOREIGN_CITYZIP) CITY
  ,A.STATE_CODE STATE
  ,A.ZIPCODE ZIP
  ,C.SHORT_DESC COUNTRY
  ,KSM_Email.preferred_ind
  ,KSM_Email.short_desc
  ,KSM_Email.email_address
  ,KSM_Spec.NO_EMAIL_IND
  ,WT0_PKG.GetPrefPhoneType(E.ID_NUMBER) PREF_PHONE_TYPE
  ,WT0_PKG.GetPrefPhoneInd(E.ID_NUMBER) PREF_PHONE_USAGE
  ,WT0_PKG.GetPrefPhone(E.ID_NUMBER) PREF_PHONE
  ,HA.STREET1 AS HSTREET1
  ,HA.STREET2 AS HSTREET2
  ,HA.STREET3 AS HSTREET3
  ,HA.CITY AS HCITY
  ,HA.STATE_CODE AS HSTATE
  ,HA.ZIPCODE AS HZIP
  ,HC.SHORT_DESC AS HCOUNTRY
  ,BUS_ADDR.COMPANY_NAME_1 AS BEMPLOYER1
  ,BUS_ADDR.COMPANY_NAME_2 AS BEMPLOYER2
  ,BUS_ADDR.BUSINESS_TITLE AS BPOSITION
  ,BUS_ADDR.STREET1    BSTREET1
  ,BUS_ADDR.STREET2    BSTREET2
  ,BUS_ADDR.STREET3    BSTREET3
  ,BUS_ADDR.CITY       BCITY
  ,BUS_ADDR.STATE_CODE BSTATE_CODE
  ,BUS_ADDR.ZIPCODE    BZIPCODE
  ,BC.SHORT_DESC    BCOUNTRY
  ,PR.last_plg_dt AS PLG_DATE
  ,PR.status1 AS PLG_STATUS
  ,PR.pacct1 AS PLG_ALLOC
  ,PR. pamt1 AS PLG_AMT
  ,PR.bal1 AS PLG_BALANCE
  ,WT0_PARSE(AM.AMT1, 3, '^') YR1
  ,WT0_PARSE(AM.AMT1, 2, '^') DATE1
  ,WT0_PARSE(AM.AMT1, 1, '^') AMT1
  ,WT0_PARSE(AM.AMT1, 4, '^') ACCT1
  ,WT0_PARSE(AM.AMT1, 6, '^') TYPE1
  ,(SELECT DESCRIPTION
     FROM APPEAL_HEADER
     WHERE APPEAL_CODE = WT0_PARSE(AM.AMT1, 5, '^')) APPEAL1
  ,WT0_PARSE(AM.AMT1,  9, '^') YR2
  ,WT0_PARSE(AM.AMT1,  8, '^') DATE2
  ,WT0_PARSE(AM.AMT1,  7, '^') AMT2
  ,WT0_PARSE(AM.AMT1, 10, '^') ACCT2
  ,WT0_PARSE(AM.AMT1, 12, '^') TYPE2
  ,(SELECT DESCRIPTION
     FROM APPEAL_HEADER
     WHERE APPEAL_CODE = WT0_PARSE(AM.AMT1, 11, '^')) APPEAL2
 ,WT0_PARSE(AMT1, 15, '^') YR3
  ,WT0_PARSE(AMT1, 14, '^') DATE3
  ,WT0_PARSE(AMT1, 13, '^') AMT3
  ,WT0_PARSE(AMT1, 16, '^') ACCT3
  ,WT0_PARSE(AMT1, 18, '^') TYPE3
  ,(SELECT DESCRIPTION
     FROM APPEAL_HEADER
     WHERE APPEAL_CODE = WT0_PARSE(AMT1, 17, '^')) APPEAL3
  ,WT0_PARSE(AMT1, 21, '^') YR4
  ,WT0_PARSE(AMT1, 20, '^') DATE4
  ,WT0_PARSE(AMT1, 19, '^') AMT4
  ,WT0_PARSE(AMT1, 22, '^') ACCT4
  ,WT0_PARSE(AMT1, 24, '^') TYPE4
  ,(SELECT DESCRIPTION
     FROM APPEAL_HEADER
     WHERE APPEAL_CODE = WT0_PARSE(AMT1, 23, '^')) APPEAL4
  ,TO_CHAR(TO_NUMBER(KSMM.KSM_#_2021), '99999990') KSM_#_2021
  ,KSMM.KSM_$_2021
  ,KM.KSM_MATCH_2021
  ,TO_CHAR(TO_NUMBER(KSMM.KSM_#_2020), '99999990') KSM_#_2020
  ,KSMM.KSM_$_2020
  ,KM.KSM_MATCH_2020
  ,TO_CHAR(TO_NUMBER(KSMM.KSM_#_2019), '99999990') KSM_#_2019
  ,KSMM.KSM_$_2019
  ,KM.KSM_MATCH_2019         
  ,TO_CHAR(TO_NUMBER(KSMM.KSM_#_2018), '99999990') KSM_#_2018   -- GET DOWNLOAD AS XLSX TO NOT APPLY 2 DECIMALS
  ,KSMM.KSM_$_2018
  ,KM.KSM_MATCH_2018         
  ,TO_CHAR(TO_NUMBER(KSMM.KSM_#_2017), '99999990') KSM_#_2017
  ,KSMM.KSM_$_2017
  ,KM.KSM_MATCH_2017
  ,TO_CHAR(TO_NUMBER(KSMM.KSM_#_2016), '99999990') KSM_#_2016
  ,KSMM.KSM_$_2016
  ,KM.KSM_MATCH_2016
  
  ,KSMM.NU_$
  ,KSMM.KSM_$
  ,KSMM.KSM_AF_$
  
  ,CASE WHEN D."DEGREES_CONCAT" LIKE '%KSM%' THEN 'Kellogg'
      WHEN D."DEGREES_CONCAT" LIKE '%BBA%' THEN 'Undergraduate Business'
       ELSE ' ' END AS "SCHOOL1"
  --degree
  ,D."PROGRAM" AS PROG1
  ,D."FIRST_KSM_YEAR" AS YEAR1
--  ,EN.CLASS_YEAR
  
  ,CASE WHEN SD."DEGREES_CONCAT" LIKE '%KSM%' THEN 'Kellogg'
      WHEN SD."DEGREES_CONCAT" LIKE '%BBA%' THEN 'Undergraduate Business'
       ELSE ' ' END AS "SCHOOL2"
  --degree
  ,SD."PROGRAM" AS PROG2
  ,SD."FIRST_KSM_YEAR" AS YEAR2
  ,P.PROSPECT_MANAGER AS PROSPECT_MANAGER1
  ,SPM.PROSPECT_MANAGER AS PROSPECT_MANAGER2
  ,P.OFFICER_RATING
  ,REPLACE(WT0_PKG.GetRecentRating(E.ID_NUMBER, 'PR'), ';;') RESEARCH_RATING
 ,WT0_PKG.GetWealth(E.ID_NUMBER) WEALTH_ASSETS
  ,WT0_PARSE(PROPOSAL_STATUS, 1,  '^') PROPOSAL_STATUS
  ,WT0_PARSE(PROPOSAL_STATUS, 2,  '^') PROPOSAL_START_DATE
  ,WT0_PARSE(PROPOSAL_STATUS, 3,  '^') PROPOSAL_ASK_AMT
  ,WT0_PARSE(PROPOSAL_STATUS, 4,  '^') ANTICIPATED_AMT
  ,WT0_PARSE(PROPOSAL_STATUS, 5,  '^') GRANTED_AMT
  ,WT0_PARSE(PROPOSAL_STATUS, 6,  '^') STOP_DATE
  ,WT0_PARSE(PROPOSAL_STATUS, 7,  '^') PROPOSAL_TITLE
  ,WT0_PARSE(PROPOSAL_STATUS, 8,  '^') PROPOSAL_DESCRIPTION
  ,WT0_PARSE(PROPOSAL_STATUS, 9,  '^') PROGRAM
  ,WT0_PARSE(PROPOSAL_STATUS, 10, '^') PROPOSAL_ID
 /* ,GI.GAMT1 AS KSM_AMT1
  ,GI.GDT1 AS KSM_DATE1
  ,GI.MATCH1 AS KSM_MATCH1
  ,GI.GAMT2 AS KSM_AMT2
  ,GI.GDT2 AS KSM_DATE2
  ,GI.MATCH2 AS KSM_MATCH2
  ,GI.GAMT3 AS KSM_AMT3
  ,GI.GDT3 AS KSM_DATE3
  ,GI.MATCH3 AS KSM_MATCH3
  ,GI.GAMT4 AS KSM_AMT4
  ,GI.GDT4 AS KSM_DATE4
  ,GI.MATCH4 AS KSM_MATCH4*/
FROM
ENTITY E
--- Inner join to get my Ids
INNER JOIN FINAL_SELECT EN
ON E.ID_NUMBER = EN.ID_NUMBER
LEFT JOIN ENTITY SP
ON EN.SPOUSE_ID = SP.ID_NUMBER
LEFT JOIN ADDRESS A
ON E.ID_NUMBER = A.ID_NUMBER
  --AND A.ADDR_TYPE_CODE IN ('H', 'B', 'A', 'AH')
  AND A.ADDR_PREF_IND = 'Y'
  AND A.ADDR_STATUS_CODE = 'A' 
LEFT JOIN rpt_pbh634.v_ksm_model_af_10k AFM
ON E.ID_NUMBER = AFM."ID_NUMBER"
--LEFT JOIN NO_EMAIL_SOL 
--ON E.ID_NUMBER = NO_EMAIL_SOL.ID_NUMBER
--LEFT JOIN NO_EMAIL_SOL2
--ON E.SPOUSE_ID_NUMBER = NO_EMAIL_SOL2.ID_NUMBER*/
LEFT JOIN KLC_YN KLCYN
ON E.ID_NUMBER = KLCYN.ID
LEFT JOIN GAB_MEMBER G
ON E.ID_NUMBER = G.ID_NUMBER
LEFT JOIN KAC K
ON E.ID_NUMBER = K.ID_NUMBER
LEFT JOIN PHS P
ON E.ID_NUMBER = P.ID_NUMBER
LEFT JOIN TRUSTEE T
ON E.ID_NUMBER = T.ID_NUMBER
LEFT JOIN TMS_COUNTRY C
ON A.COUNTRY_CODE = C.country_code
LEFT JOIN EMAIL EM
ON E.ID_NUMBER = EM.ID_NUMBER
  AND EM.EMAIL_STATUS_CODE = 'A'
  AND EM.PREFERRED_IND = 'Y'
LEFT JOIN TMS_EMAIL_TYPE TEM
ON EM.EMAIL_TYPE_CODE = TEM.email_type_code
LEFT JOIN table(rpt_pbh634.ksm_pkg.tbl_special_handling_concat) SPSH
ON EN.SPOUSE_ID = SPSH.ID_NUMBER
LEFT JOIN EMAIL SPEM
ON EN.SPOUSE_ID = SPEM.ID_NUMBER
  AND SPEM.EMAIL_STATUS_CODE = 'A'
  AND SPEM.PREFERRED_IND = 'Y'
LEFT JOIN TMS_EMAIL_TYPE SPTEM
ON SPEM.EMAIL_TYPE_CODE = SPTEM.email_type_code
LEFT JOIN TELEPHONE T
ON E.ID_NUMBER = T.ID_NUMBER
  AND T.TELEPHONE_STATUS_CODE = 'A'
  AND T.PREFERRED_IND = 'Y'
LEFT JOIN TMS_TELEPHONE_TYPE PH
ON T.TELEPHONE_TYPE_CODE = PH.telephone_type_code
LEFT JOIN ADDRESS HA
ON E.ID_NUMBER = HA.ID_NUMBER 
  AND HA.ADDR_TYPE_CODE = 'H'
  AND HA.ADDR_STATUS_CODE = 'A'
LEFT JOIN TMS_COUNTRY HC
ON HA.COUNTRY_CODE = HC.country_code
LEFT JOIN ADDRESS BUS_ADDR
ON E.ID_NUMBER = BUS_ADDR.ID_NUMBER
  AND BUS_ADDR.ADDR_TYPE_CODE = 'B'
  AND BUS_ADDR.ADDR_STATUS_CODE = 'A'
LEFT JOIN TMS_COUNTRY BC
ON BUS_ADDR.COUNTRY_CODE = BC.country_code
LEFT JOIN AMOUNTS AM
ON E.ID_NUMBER = AM.ID_NUMBER
LEFT JOIN PLEDGE_ROWS PR
  ON E.ID_NUMBER = PR.ID
LEFT JOIN KSM_MONEY KSMM
ON E.ID_NUMBER = KSMM.GIFT_DONOR_ID
LEFT JOIN KSM_MATCHES KM
ON E.ID_NUMBER = KM.GIFT_DONOR_ID
LEFT JOIN RPT_PBH634.V_ENTITY_KSM_DEGREES D
ON E.ID_NUMBER = D."ID_NUMBER"
LEFT JOIN RPT_PBH634.V_ENTITY_KSM_DEGREES SD
ON EN.SPOUSE_ID = SD."ID_NUMBER"
LEFT JOIN NU_PRS_TRP_PROSPECT P
ON E.ID_NUMBER = P.ID_NUMBER
LEFT JOIN NU_PRS_TRP_PROSPECT SPM
ON E.SPOUSE_ID_NUMBER = SPM.ID_NUMBER
LEFT JOIN PROPOSALS PROP
ON E.ID_NUMBER = PROP.ID_NUMBER
LEFT JOIN KSM_Email
ON KSM_Email.ID_NUMBER = E.ID_NUMBER
LEFT JOIN KSM_Spec
ON KSM_Spec.ID_NUMBER = E.ID_NUMBER
Where KSM_SPEC.NO_CONTACT IS NULL

--LEFT JOIN GIFTINFO GI
--  ON E.ID_NUMBER = GI.ID_NUMBER

ORDER BY  E.REPORT_NAME ASC ;

