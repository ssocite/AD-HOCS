--- Take Amy's View
--- Add NGC lifetime and > 0 to have a donor indicator
--- Inner Join PHS Table

WITH
 CURRENT_CALENDAR AS (
   SELECT
    CURR_FY
    ,TODAY
   FROM RPT_PBH634.V_CURRENT_CALENDAR
 )

 /*SELECT
*
FROM committee C
WHERE C.COMMITTEE_CODE IN ('TBOT', 'U', 'KACNA', 'KFN', 'HAK', 'KPETC', 'KREAC', 'KAMP')
ORDER BY ID_NUMBER;*/

,ALL_EVENTS AS (
   SELECT
EP.ID_NUMBER
,EP.EVENT_ID
,EP.EVENT_NAME
,EP.KSM_EVENT
,EP.EVENT_TYPE
,EP.PARTICIPATION_ID
,EP.PARTICIPATION_STATUS_CODE
,EP.PARTICIPATION_STATUS
,EP.START_DT
,EP.START_FY_CALC
,EP.STOP_DT
FROM rpt_pbh634.v_nu_event_participants_fast EP
INNER JOIN RPT_PBH634.V_ENTITY_KSM_DEGREES KD
ON EP.id_number = KD."ID_NUMBER"
   WHERE ksm_event = 'Y'
     AND person_or_org = 'P'
    --AND ID_NUMBER = '0000146281'
UNION
SELECT
ER.ID_NUMBER
,ER.EVENT_ID
,ER.EVENT_NAME
,ER.KSM_EVENT
,ER.EVENT_TYPE
,ER.PARTICIPATION_ID
,ER.PARTICIPATION_STATUS_CODE
,ER.PARTICIPATION_STATUS
,ER.START_DT
,ER.START_FY_CALC
,ER.STOP_DT
FROM RPT_PBH634.V_NU_EVENT_REGISTRANTS ER
INNER JOIN RPT_PBH634.V_ENTITY_KSM_DEGREES KD
ON ER.id_number = KD."ID_NUMBER"
WHERE ksm_event = 'Y'
     AND person_or_org = 'P'
    -- AND ID_NUMBER = '0000146281'
)

,MAX_MIN_EVENTS AS (
    SELECT
      AE.ID_NUMBER
      ,MAX(START_DT) AS LAST_EVENT_DATE
      ,MAX(START_FY_CALC) AS LAST_EVENT_FY
      ,MIN(START_DT) AS FIRST_EVENT_DATE
      ,MIN(START_FY_CALC) AS FIRST_EVENT_FY
    FROM ALL_EVENTS AE
    CROSS JOIN CURRENT_CALENDAR CC
      WHERE --AE.START_FY_CALC <= CC.CURR_FY - 5
        AE.PARTICIPATION_ID IS NOT NULL
    GROUP BY AE.ID_NUMBER
)

,FIRST_EVENT_CFY AS (
    SELECT
      EP.ID_NUMBER
      ,min(EP.start_fy_calc) AS FIRST_EVENT_FY
    FROM rpt_pbh634.v_nu_event_participants_fast EP
    CROSS JOIN CURRENT_CALENDAR CC
    WHERE EP.ksm_event = 'Y'
     AND EP.person_or_org = 'P'
    GROUP BY EP.ID_NUMBER
   HAVING min(START_FY_CALC) = 2022
 )

,EVENT_PARTICIPANTS_5FY AS (
   SELECT
     AE.*
   FROM ALL_EVENTS AE
   CROSS JOIN CURRENT_CALENDAR CC
    WHERE AE.start_fy_calc BETWEEN CC.CURR_FY-7 AND CC.CURR_FY
     -- AND PARTICIPATION_ID IS NOT NULL
)

,COUNT_OVERALL_EVENTS AS (
    SELECT
      EP.ID_NUMBER
      ,EP.start_fy_calc
      ,COUNT(DISTINCT EP.EVENT_ID) AS COUNT_OF_EVENTS
    FROM EVENT_PARTICIPANTS_5FY  EP
    WHERE PARTICIPATION_ID IS NOT NULL
    GROUP BY EP.ID_NUMBER, EP.START_FY_CALC
 )

,COUNT_EVENTS_ID AS (
  SELECT
      EP.ID_NUMBER
      ,EP.start_fy_calc
      ,COUNT(EP.ID_NUMBER) AS COUNT_OF_EVENTS
    FROM EVENT_PARTICIPANTS_5FY  EP
   -- WHERE PARTICIPATION_ID IS NOT NULL
    GROUP BY EP.ID_NUMBER, EP.START_FY_CALC
)

,COUNT_PARTICIPATION AS (
    SELECT
      EP.ID_NUMBER
      ,EP.event_id
      ,EP.start_fy_calc
      ,COUNT(DISTINCT EP.EVENT_ID) AS COUNT_OF_PARTICIPATION
    FROM EVENT_PARTICIPANTS_5FY  EP
   -- WHERE PARTICIPATION_ID IS NOT NULL
    GROUP BY EP.ID_NUMBER, EP.event_id, EP.start_fy_calc
)


,RETAINED_ATTENDEE AS (
   SELECT
     EP.ID_NUMBER
     ,CASE WHEN EP.start_fy_calc = CC.CURR_FY THEN 'Y' ELSE 'N' END AS ATTEND_CFY
     ,CASE WHEN EP.stART_FY_CALC = CC.CURR_FY-1 THEN 'Y' ELSE 'N' END AS ATTEND_PFY1
     ,CASE WHEN EP.START_FY_CALC = CC.CURR_FY-2 THEN 'Y' ELSE 'N' END AS ATTEND_PFY2
     ,CASE WHEN EP.START_FY_CALC = CC.CURR_FY-3 THEN 'Y' ELSE 'N' END AS ATTEND_PFY3
     ,CASE WHEN EP.START_FY_CALC = CC.CURR_FY-4 THEN 'Y' ELSE 'N' END AS ATTEND_PFY4
     ,CASE WHEN EP.START_FY_CALC = CC.CURR_FY-5 THEN 'Y' ELSE 'N' END AS ATTEND_PFY5
     ,CASE WHEN EP.START_FY_CALC = CC.CURR_FY-6 THEN 'Y' ELSE 'N' END AS ATTEND_PFY6
     ,CASE WHEN EP.START_FY_CALC = CC.CURR_FY-7 THEN 'Y' ELSE 'N' END AS ATTEND_PFY7
   FROM EVENT_PARTICIPANTS_5FY  EP
   CROSS JOIN CURRENT_CALENDAR CC
   WHERE EP.PARTICIPATION_ID IS NOT NULL
)

,MAX_RETAINED AS (
   SELECT
     A.ID_NUMBER
     ,MAX(A.ATTEND_CFY) AS ATTEND_CFY
     ,MAX(A.ATTEND_PFY1) AS ATTEND_PFY1
     ,MAX(A.ATTEND_PFY2) AS ATTEND_PFY2
     ,MAX(A.ATTEND_PFY3) AS ATTEND_PFY3
     ,MAX(A.ATTEND_PFY4) AS ATTEND_PFY4
     ,MAX(A.ATTEND_PFY5) AS ATTEND_PFY5
     ,MAX(A.ATTEND_PFY6) AS ATTEND_PFY6
     ,MAX(A.ATTEND_PFY7) AS ATTEND_PFY7
   FROM RETAINED_ATTENDEE A
   GROUP BY A.ID_NUMBER
)

,ATTENDEE_STATUS_CFY AS (
   SELECT
     MR.ID_NUMBER
     ,EP.START_FY_CALC
     ,CASE WHEN MR.ATTEND_PFY1 = 'Y' AND MR.ATTEND_PFY2 = 'Y' AND MR.ATTEND_PFY3 = 'Y' THEN 'Loyal Attendee'
        WHEN (MR.ATTEND_PFY1 = 'Y' AND MR.ATTEND_PFY2 = 'Y')
            OR (MR.ATTEND_PFY1 = 'Y' AND MR.ATTEND_PFY3 = 'Y')
            OR (MR.ATTEND_PFY2 = 'Y' AND MR.ATTEND_PFY3 = 'Y') THEN 'Loyal 2 of 3'
        WHEN MME.FIRST_EVENT_FY = CC.CURR_FY THEN 'First Time Attendee'
        WHEN (MR.ATTEND_PFY1 = 'Y' OR MR.ATTEND_PFY2 = 'Y' OR MR.Attend_PFY3 = 'Y' OR MR.ATTEND_PFY4 = 'Y') THEN 'Renewed Attendee'
        WHEN (MR.ATTEND_PFY1 = 'N' AND MR.ATTEND_PFY2 = 'N' AND MR.ATTEND_PFY3 = 'N' AND MR.ATTEND_PFY4 = 'N' AND MR.ATTEND_PFY5='N') OR
            (MR.ATTEND_PFY1 = 'N' AND MR.ATTEND_PFY2 = 'N' AND MR.ATTEND_PFY3 = 'N' AND MR.ATTEND_PFY4='N' AND MR.ATTEND_PFY5 = 'Y') THEN 'Lapsed Attendee'
            END AS ATTENDEE_STATUS_CFY
    FROM MAX_RETAINED MR
    CROSS JOIN CURRENT_CALENDAR CC
    LEFT JOIN EVENT_PARTICIPANTS_5FY  EP
    ON MR.ID_NUMBER = EP.ID_NUMBER
    LEFT JOIN FIRST_EVENT_CFY FE
    ON MR.ID_NUMBER = FE.ID_NUMBER
    LEFT JOIN MAX_MIN_EVENTS MME
    ON MR.ID_NUMBER = MME.ID_NUMBER
    WHERE EP.participation_id IS NOT NULL
      AND EP.start_fy_calc = CC.CURR_FY
)

,ATTENDEE_STATUS_PFY1 AS(
    SELECT
     MR.ID_NUMBER
     ,EP.start_fy_calc
     ,CASE WHEN MR.ATTEND_PFY2 = 'Y' AND MR.ATTEND_PFY3 = 'Y' AND MR.ATTEND_PFY4 = 'Y' THEN 'Loyal Attendee'
        WHEN (MR.ATTEND_PFY2 = 'Y' AND MR.ATTEND_PFY3 = 'Y')
            OR (MR.ATTEND_PFY2 = 'Y' AND MR.ATTEND_PFY4 = 'Y')
            OR (MR.ATTEND_PFY3 = 'Y' AND MR.ATTEND_PFY4 = 'Y') THEN 'Loyal 2 of 3'
        WHEN MME.FIRST_EVENT_FY = CC.CURR_FY-1 THEN 'First Time Attendee'
        WHEN (MR.ATTEND_PFY2 = 'Y' OR MR.ATTEND_PFY3 = 'Y' OR MR.Attend_PFY4 = 'Y' OR MR.ATTEND_PFY5 = 'Y') THEN 'Renewed Attendee'
        WHEN (MR.ATTEND_PFY2 = 'N' AND MR.ATTEND_PFY3 = 'N' AND MR.ATTEND_PFY4 = 'N' AND MR.ATTEND_PFY5 = 'N' AND MR.ATTEND_PFY6='N') OR
             (MR.ATTEND_PFY2 = 'N' AND MR.ATTEND_PFY3 = 'N' AND MR.ATTEND_PFY4 = 'N' AND MR.ATTEND_PFY5 = 'N' AND MR.ATTEND_PFY6='Y') THEN 'Lapsed Attendee'
            END AS ATTENDEE_STATUS_PFY1
    FROM MAX_RETAINED MR
    CROSS JOIN CURRENT_CALENDAR CC
    LEFT JOIN EVENT_PARTICIPANTS_5FY  EP
    ON MR.ID_NUMBER = EP.ID_NUMBER
    LEFT JOIN FIRST_EVENT_CFY FE
    ON MR.ID_NUMBER = FE.ID_NUMBER
    LEFT JOIN MAX_MIN_EVENTS MME
    ON MR.ID_NUMBER = MME.ID_NUMBER
    WHERE EP.participation_id IS NOT NULL
      AND EP.start_fy_calc = CC.CURR_FY-1
)

,ATTENDEE_STATUS_PFY2 AS(
    SELECT
     MR.ID_NUMBER
     ,EP.start_fy_calc
     ,CASE WHEN MR.ATTEND_PFY3 = 'Y' AND MR.ATTEND_PFY4 = 'Y' AND MR.ATTEND_PFY5 = 'Y' THEN 'Loyal Attendee'
        WHEN (MR.ATTEND_PFY3 = 'Y' AND MR.ATTEND_PFY4 = 'Y')
            OR (MR.ATTEND_PFY3 = 'Y' AND MR.ATTEND_PFY5 = 'Y')
            OR (MR.ATTEND_PFY4 = 'Y' AND MR.ATTEND_PFY5 = 'Y') THEN 'Loyal 2 of 3'
        WHEN MME.FIRST_EVENT_FY = CC.CURR_FY-2 THEN 'First Time Attendee'
        WHEN (MR.ATTEND_PFY3 = 'Y' OR MR.ATTEND_PFY4 = 'Y' OR MR.Attend_PFY5 = 'Y' OR MR.ATTEND_PFY6 = 'Y') THEN 'Renewed Attendee'
        WHEN (MR.ATTEND_PFY3 = 'N' AND MR.ATTEND_PFY4 = 'N' AND MR.ATTEND_PFY5 = 'N' AND MR.ATTEND_PFY6 = 'N' AND MR.ATTEND_PFY7='N') OR
             (MR.ATTEND_PFY3 = 'N' AND MR.ATTEND_PFY4 = 'N' AND MR.ATTEND_PFY5 = 'N' AND MR.ATTEND_PFY6 = 'N' AND MR.ATTEND_PFY7='Y') THEN 'Lapsed Attendee'
            END AS ATTENDEE_STATUS_PFY2
    FROM MAX_RETAINED MR
    CROSS JOIN CURRENT_CALENDAR CC
    LEFT JOIN EVENT_PARTICIPANTS_5FY  EP
    ON MR.ID_NUMBER = EP.ID_NUMBER
    LEFT JOIN FIRST_EVENT_CFY FE
    ON MR.ID_NUMBER = FE.ID_NUMBER
    LEFT JOIN MAX_MIN_EVENTS MME
    ON MR.ID_NUMBER = MME.ID_NUMBER
    WHERE EP.participation_id IS NOT NULL
      AND EP.start_fy_calc = CC.CURR_FY-2
)

,ATTENDEE_STATUS_PFY3 AS(
    SELECT
     MR.ID_NUMBER
     ,EP.start_fy_calc
     ,CASE WHEN MR.ATTEND_PFY4 = 'Y' AND MR.ATTEND_PFY5 = 'Y' AND MR.ATTEND_PFY6 = 'Y' THEN 'Loyal Attendee'
        WHEN (MR.ATTEND_PFY4 = 'Y' AND MR.ATTEND_PFY5 = 'Y')
            OR (MR.ATTEND_PFY4 = 'Y' AND MR.ATTEND_PFY6 = 'Y')
            OR (MR.ATTEND_PFY5 = 'Y' AND MR.ATTEND_PFY6 = 'Y') THEN 'Loyal 2 of 3'
        WHEN MME.FIRST_EVENT_FY = CC.CURR_FY-3 THEN 'First Time Attendee'
        WHEN (MR.ATTEND_PFY4 = 'Y' OR MR.ATTEND_PFY5 = 'Y' OR MR.Attend_PFY6 = 'Y' OR MR.ATTEND_PFY7 = 'Y') THEN 'Renewed Attendee'
        WHEN (MR.ATTEND_PFY4 = 'N' AND MR.ATTEND_PFY5 = 'N' AND MR.ATTEND_PFY6 = 'N' AND MR.ATTEND_PFY7 = 'N')  THEN 'Lapsed Attendee'
            END AS ATTENDEE_STATUS_PFY3
    FROM MAX_RETAINED MR
    CROSS JOIN CURRENT_CALENDAR CC
    LEFT JOIN EVENT_PARTICIPANTS_5FY  EP
    ON MR.ID_NUMBER = EP.ID_NUMBER
    LEFT JOIN FIRST_EVENT_CFY FE
    ON MR.ID_NUMBER = FE.ID_NUMBER
    LEFT JOIN MAX_MIN_EVENTS MME
    ON MR.ID_NUMBER = MME.ID_NUMBER
    WHERE EP.participation_id IS NOT NULL
      AND EP.start_fy_calc = CC.CURR_FY-3
)

,ATTENDEE_STATUS_PFY4 AS(
     SELECT
     MR.ID_NUMBER
     ,EP.start_fy_calc
     ,CASE WHEN MR.ATTEND_PFY5 = 'Y' AND MR.ATTEND_PFY6 = 'Y' AND MR.ATTEND_PFY7 = 'Y' THEN 'Loyal Attendee'
        WHEN (MR.ATTEND_PFY5 = 'Y' AND MR.ATTEND_PFY6 = 'Y')
            OR (MR.ATTEND_PFY5 = 'Y' AND MR.ATTEND_PFY7 = 'Y')
            OR (MR.ATTEND_PFY6 = 'Y' AND MR.ATTEND_PFY7 = 'Y') THEN 'Loyal 2 of 3'
        WHEN MME.FIRST_EVENT_FY = CC.CURR_FY-4 THEN 'First Time Attendee'
        WHEN (MR.ATTEND_PFY5 = 'Y' OR MR.ATTEND_PFY6 = 'Y' OR MR.Attend_PFY7 = 'Y') THEN 'Renewed Attendee'
        WHEN (MR.ATTEND_PFY5 = 'N' AND MR.ATTEND_PFY6 = 'N' AND MR.ATTEND_PFY7 = 'N')  THEN 'Lapsed Attendee'
            END AS ATTENDEE_STATUS_PFY4
    FROM MAX_RETAINED MR
    CROSS JOIN CURRENT_CALENDAR CC
    LEFT JOIN EVENT_PARTICIPANTS_5FY  EP
    ON MR.ID_NUMBER = EP.ID_NUMBER
    LEFT JOIN FIRST_EVENT_CFY FE
    ON MR.ID_NUMBER = FE.ID_NUMBER
    LEFT JOIN MAX_MIN_EVENTS MME
    ON MR.ID_NUMBER = MME.ID_NUMBER
    WHERE EP.participation_id IS NOT NULL
      AND EP.start_fy_calc = CC.CURR_FY-4
)

-- You can try a pre-join subquery, where instead of having 5 left joins at the end, you merge them here, and then just left join once in your main query

,ATTENDEE_STATUS_MERGED AS(
SELECT DISTINCT
MR.ID_NUMBER
,EP.start_fy_calc
,CFY.ATTENDEE_STATUS_CFY
,PFY1.ATTENDEE_STATUS_PFY1
,PFY2.ATTENDEE_STATUS_PFY2
,PFY3.ATTENDEE_STATUS_PFY3
,PFY4.ATTENDEE_STATUS_PFY4
-- Can use only MAX_RETAINED since that is the base query in each of the others, and they all use left join so you are not filtering any IDs out entirely
FROM MAX_RETAINED MR
    LEFT JOIN EVENT_PARTICIPANTS_5FY  EP
    ON MR.ID_NUMBER = EP.ID_NUMBER
    LEFT JOIN ATTENDEE_STATUS_CFY CFY
    ON MR.ID_NUMBER = CFY.ID_NUMBER
      AND EP.start_fy_calc = CFY.START_FY_CALC
    LEFT JOIN ATTENDEE_STATUS_PFY1 PFY1
    ON MR.ID_NUMBER = PFY1.ID_NUMBER
      AND EP.START_FY_CALC = PFY1.START_FY_CALC
    LEFT JOIN ATTENDEE_STATUS_PFY2 PFY2
    ON MR.ID_NUMBER = PFY2.ID_NUMBER
      AND EP.START_FY_CALC = PFY2.START_FY_CALC
    LEFT JOIN ATTENDEE_STATUS_PFY3 PFY3
    ON MR.ID_NUMBER = PFY3.ID_NUMBER
      AND EP.START_FY_CALC = PFY3.START_FY_CALC
    LEFT JOIN ATTENDEE_STATUS_PFY4 PFY4
    ON MR.ID_NUMBER = PFY4.ID_NUMBER
      AND EP.START_FY_CALC = PFY4.START_FY_CALC
    WHERE EP.participation_id IS NOT NULL
)
-- Now you have an extra subquery but you could have fewer joins at the end - this might help it run faster (each left join multiplies the number of operations)


,CVENT_GIVING AS (
   SELECT DISTINCT
     GT.*
   FROM RPT_PBH634.V_KSM_GIVING_TRANS GT
   INNER JOIN EVENT_PARTICIPANTS_5FY EP
   ON GT.ID_NUMBER = EP.ID_NUMBER
   INNER JOIN GIFT G
    ON GT."ID_NUMBER" = G.GIFT_DONOR_ID
    AND GT."TX_NUMBER" = G.GIFT_RECEIPT_NUMBER
   WHERE (G.GIFT_APPEAL = 'LAYKA' OR G.GIFT_APPEAL = 'MAYKA')

)

,GIVING_KLC AS (
   SELECT DISTINCT
    GT.ID_NUMBER
   ,GT."FISCAL_YEAR"
   ,SUM(GT."CREDIT_AMOUNT") AS TOTAL_GIVING
  FROM RPT_PBH634.V_KSM_GIVING_TRANS GT
  CROSS JOIN CURRENT_CALENDAR CC
  INNER JOIN CVENT_GIVING CG
  ON GT.ID_NUMBER = CG.ID_NUMBER
  WHERE GT."TX_GYPM_IND" NOT IN ('P')
    AND GT."FISCAL_YEAR" BETWEEN CC.CURR_FY-5 AND CC.CURR_FY
  GROUP BY GT.ID_NUMBER, GT.FISCAL_YEAR
)

,KLC_YN AS (
  SELECT
    GK.ID_NUMBER
    ,GK.FISCAL_YEAR
    ,CASE WHEN GK.TOTAL_GIVING >= 2500 AND GK.TOTAL_GIVING < 10000 THEN 'Y' ELSE 'N' END AS KLC_2500
    ,CASE WHEN GK.TOTAL_GIVING >= 10000 THEN 'Y' ELSE 'N' END AS KLC_10K
   FROM  GIVING_KLC GK
   INNER JOIN EVENT_PARTICIPANTS_5FY EP
   ON GK.ID_NUMBER = EP.ID_NUMBER
     AND GK.FISCAL_YEAR = EP.start_fy_calc
   CROSS JOIN CURRENT_CALENDAR CC
)

,TOTAL_CVENT_GIVING AS (
    SELECT
      CV.ID_NUMBER
      ,CV.FISCAL_YEAR
      ,SUM(CV.CREDIT_AMOUNT) AS TOTAL_CVENT_AMT
    FROM CVENT_GIVING CV
    GROUP BY CV.ID_NUMBER, CV.FISCAL_YEAR
)

,NUMBER_OF_GIFTS AS (
    SELECT
      CG.ID_NUMBER
      ,CG.FISCAL_YEAR
      ,COUNT(CG.TX_Number) AS COUNT_OF_GIFTS
    FROM CVENT_GIVING CG
    GROUP BY CG.ID_NUMBER, CG.FISCAL_YEAR
)


,committee_info AS (
SELECT c.id_number
      ,listagg(ct.full_desc, chr(13)) Within Group (order by ct.full_desc) as committees
FROM committee c
INNER JOIN tms_committee_table ct
ON c.committee_code = ct.committee_code
WHERE c.committee_status_code = 'C'
GROUP BY c.id_number
)

,KELLOGG_SPEAKER AS(
  SELECT
    A.ID_NUMBER
    ,MIN(RPT_PBH634.KSM_PKG.to_date2(A.START_DT, 'YYYYMMDD')) KEEP(dense_rank FIRST ORDER BY A.START_DT DESC, A.XCOMMENT ASC) AS START_DT
    ,MIN(A.XCOMMENT) KEEP (dense_rank FIRST ORDER BY A.START_DT DESC, A.XCOMMENT ASC) AS XCOMMENT
  FROM ACTIVITY A
  INNER JOIN EVENT_PARTICIPANTS_5FY P
  ON A.ID_NUMBER = P.ID_NUMBER
  WHERE A.ACTIVITY_CODE = 'KSP'
  GROUP BY A.ID_NUMBER
)

,KALC AS (
  SELECT
    ID_NUMBER
  FROM COMMITTEE
  WHERE COMMITTEE_CODE = 'KALC'
    AND COMMITTEE_STATUS_CODE = 'C'
)

SELECT DISTINCT
  E.ID_NUMBER
  ,E.GENDER_CODE
  ,E.RECORD_STATUS_CODE
  ,E.REPORT_NAME
  ,E.INSTITUTIONAL_SUFFIX
  ,TRUNC(TO_NUMBER(CC.TODAY - RPT_PBH634.KSM_PKG.to_date2(E.BIRTH_DT, 'YYYY-MM-DD')) / 365.25) AS AGE
  ,KH."HOUSEHOLD_COUNTRY"
  ,KH."HOUSEHOLD_CONTINENT"
  ,KH."HOUSEHOLD_CITY"
  ,KH."HOUSEHOLD_STATE"
  ,KH."HOUSEHOLD_GEO_PRIMARY_DESC"
  ,CASE WHEN KH.HOUSEHOLD_COUNTRY NOT IN ('United States',
     'Afghanistan',
'Bahrain',
'Bangladesh',
'Bhutan',
'Brunei Darussalam',
'Burma',
'Cocos (Keeling) Islands',
'China',
'Christmas Island',
'Hong Kong',
'India',
'Indonesia',
'Iran',
'Iraq',
'Israel',
'Japan',
'Jordan',
'Cambodia (Kampuchea)',
'Kazakhstan',
'Korea',
'Kuwait',
'Kyrgyzstan',
'Laos',
'Lebanon',
'Macao',
'Malaysia',
'Maldives',
'Mongolia',
'Nepal',
'North Korea',
'Oman',
'Pakistan',
'Palestine',
'Philippines',
'Qatar',
'Saudi Arabia',
'Singapore',
'South Korea',
'Sri Lanka',
'Syria',
'Taiwan',
'Tajikistan',
'Thailand',
'East Timor',
'Turkey',
'Turkmenistan',
'United Arab Emirates',
'Uzbekistan',
'Vietnam',
'Yemen',
'Yemen Peoples Republic') THEN KH."HOUSEHOLD_CONTINENT"
      ELSE KH.HOUSEHOLD_COUNTRY END AS HOUSEHOLD_LOCATION
 ,KD."PROGRAM"
 ,KD."PROGRAM_GROUP"
 ,KD."FIRST_KSM_YEAR"
 ,NP.EVALUATION_RATING
  ,KMG.pr_segment
  ,EP.event_id
  ,EP.event_name
  ,EP.event_type
  ,NE.event_codes_concat
  ,EP.start_dt
  ,EP.stop_dt
  ,EP.participation_id
  ,EP.start_fy_calc
  ,OE.COUNT_OF_EVENTS
  ,NG.COUNT_OF_GIFTS
  ,CP.COUNT_OF_PARTICIPATION
 -- ,CG.DATE_OF_RECORD
  --,CASE WHEN EP.participation_id IS NOT NULL THEN TCG.TOTAL_CVENT_AMT END AS TOTAL_CVENT_AMT
  ,TCG.TOTAL_CVENT_AMT
  --,CASE WHEN EP.PARTICIPATION_ID IS NOT NULL THEN TCG.TOTAL_CVENT_AMT/OE.COUNT_OF_EVENTS/CP.COUNT_OF_PARTICIPATION END AS "Credit_to_Sum"
  ,TCG.TOTAL_CVENT_AMT/CEI.COUNT_OF_EVENTS AS "Credit_to_Sum"
 -- ,CG.CREDIT_AMOUNT
  ,ED.EVENT_AMOUNT AS "Cvent Amount"
  ,CASE WHEN AM.START_FY_CALC = CC.CURR_FY THEN AM.ATTENDEE_STATUS_CFY
      WHEN AM.START_FY_CALC = CC.CURR_FY-1 THEN AM.ATTENDEE_STATUS_PFY1
      WHEN AM.START_FY_CALC = CC.CURR_FY-2 THEN AM.ATTENDEE_STATUS_PFY2
      WHEN AM.START_FY_CALC = CC.CURR_FY-3 THEN AM.ATTENDEE_STATUS_PFY3
      WHEN AM.START_FY_CALC = CC.CURR_FY-4 THEN AM.ATTENDEE_STATUS_PFY4
        ELSE ' ' END AS EVENT_ATTENDEE_STATUS
  ,MME.LAST_EVENT_FY
  ,MME.FIRST_EVENT_DATE
  ,MME.LAST_EVENT_DATE
  ,KGS.NGC_LIFETIME
  ,Case when KGS.NGC_LIFETIME > 0 then 'Donor' else '' end as Donor_NGC_IND
  ,KGS."NGC_CFY"
  ,KGS."CASH_CFY"
  ,KGS."AF_CFY"
  ,KGS.af_status
 ,CASE WHEN CI.committees LIKE '%Board of Trus%' THEN 'Y' ELSE ' ' END AS "TRUSTEE"
 ,CASE WHEN CI.committees LIKE '%KSM Global Ad%' THEN 'Y' ELSE ' ' END AS "GAB"
 ,CASE WHEN CI.committees LIKE '%Kellogg Alumni Coun%' THEN 'Y' ELSE ' ' END AS "KAC"
 ,CASE WHEN CI.committees LIKE '%Kellogg Finance Net%' THEN 'Y' ELSE ' ' END AS "KFN"
 ,CASE WHEN Ci.committees LIKE '%Healthcare at Kell%' THEN 'Y' ELSE ' ' END AS "Healthcare Advisory Council"
 ,CASE WHEN CI.committees like '%Real Estate Ad%' THEN 'Y' ELSE ' ' END AS "Real Estate Advisory Council"
 ,CASE WHEN CI.committees like '%Asset Management Prac%' THEN 'Y' ELSE ' ' END AS "Asset Mgmt Practicum Council"
 ,CASE WHEN CI.committees like '%Private Equity Ta%' THEN 'Y' ELSE ' ' END AS "Private Equity Task Force"
 ,CASE WHEN KS.ID_NUMBER IS NOT NULL THEN 'Y' ELSE ' ' END AS "Kellogg Speaker"
 ,CASE WHEN KALC.ID_NUMBER IS NOT NULL THEN 'Y' ELSE ' ' END AS "Kellogg Admissions Council"
 ,CASE WHEN NE.event_codes_concat like '%Career (202)%' THEN 'Y'
     WHEN NE.event_name like '%Matthew Tem%' THEN 'Y' ELSE ' ' END AS "CMC"
   ,KLC.KLC_2500
   ,KLC.KLC_10K
   ,CASE WHEN KLC.ID_NUMBER IS NOT NULL THEN 'Y' ELSE ' ' END AS KLC_YN
FROM ENTITY E
CROSS JOIN CURRENT_CALENDAR CC
INNER JOIN EVENT_PARTICIPANTS_5FY EP
ON E.ID_NUMBER = EP.id_number
LEFT JOIN rpt_pbh634.v_nu_events NE
ON EP.event_id = NE.event_id
LEFT JOIN NU_PRS_TRP_PROSPECT NP
ON E.ID_NUMBER = NP.ID_NUMBER
LEFT JOIN RPT_PBH634.V_KSM_MODEL_MG KMG
ON E.ID_NUMBER = KMG.id_number
LEFT JOIN RPT_PBH634.V_ENTITY_KSM_HOUSEHOLDS KH
ON E.ID_NUMBER = KH.ID_NUMBER
LEFT JOIN RPT_PBH634.V_ENTITY_KSM_DEGREES KD
ON E.ID_NUMBER = KD."ID_NUMBER"
LEFT JOIN rpt_abm1914.mv_tmp_eventdonors ED
ON E.ID_NUMBER = ED.ID_NUMBER
  AND EP.event_id = ED.EVENT_ID
LEFT JOIN FIRST_EVENT_CFY FE
ON E.ID_NUMBER = FE.ID_NUMBER
LEFT JOIN ATTENDEE_STATUS_MERGED AM
ON E.ID_NUMBER = AM.ID_NUMBER
  AND EP.start_fy_calc = AM.START_FY_CALC
LEFT JOIN MAX_MIN_EVENTS MME
ON E.ID_NUMBER = MME.ID_NUMBER
LEFT JOIN COUNT_OVERALL_EVENTS OE
ON EP.ID_NUMBER = OE.ID_NUMBER
  AND EP.start_fy_calc = OE.START_FY_CALC
LEFT JOIN COUNT_PARTICIPATION CP
ON EP.ID_NUMBER = CP.ID_NUMBER
  AND EP.event_id = CP.EVENT_ID
  AND EP.START_FY_CALC = CP.START_FY_CALC
LEFT JOIN COUNT_EVENTS_ID CEI
ON EP.ID_NUMBER = CEI.ID_NUMBER
  AND EP.START_FY_CALC = CEI.START_FY_CALC
LEFT JOIN CVENT_GIVING CG
ON E.ID_NUMBER = CG.ID_NUMBER
LEFT JOIN TOTAL_CVENT_GIVING  TCG
ON E.ID_NUMBER = TCG.ID_NUMBER
  AND EP.START_FY_CALC = TCG.FISCAL_YEAR
LEFT JOIN NUMBER_OF_GIFTS NG
ON E.ID_NUMBER = NG.ID_NUMBER
  AND EP.start_fy_calc = NG.FISCAL_YEAR
LEFT JOIN RPT_PBH634.V_KSM_GIVING_SUMMARY KGS
ON E.ID_NUMBER = KGS."ID_NUMBER"
LEFT JOIN committee_info CI
ON E.ID_NUMBER = CI.ID_NUMBER
LEFT JOIN KELLOGG_SPEAKER KS
ON E.ID_NUMBER = KS.ID_NUMBER
LEFT JOIN KALC
ON E.ID_NUMBER = KALC.ID_NUMBER
LEFT JOIN KLC_YN KLC
ON E.ID_NUMBER = KLC.ID_NUMBER
  AND EP.start_fy_calc = KLC.FISCAL_YEAR
inner join table (rpt_pbh634.ksm_pkg.tbl_committee_phs) phs on phs.id_number =  E.ID_NUMBER
WHERE E.RECORD_STATUS_CODE NOT IN ('I','X')
  AND EP.start_fy_calc BETWEEN CC.CURR_FY-4 AND CC.CURR_FY
  AND EP.START_FY_CALC IN ('2020','2021','2022')
ORDER BY E.ID_NUMBER, EP.start_dt
;
